version: 2.1
orbs:
  slack: circleci/slack@4.2.1

executors:
  fe-default:
    working_directory: ~/project/apl/fe
    docker:
    - image: cimg/node:12.20
    environment:
      SOURCE_REPO: https://github.com/t3-goto/lra-app
      SOURCE_BRANCH: feature/mod-circleci
      SOURCE_DIR: apl/fe

commands:
  sparse-checkout:
    description: 'Sparse checkout for sub directories.'
    steps:
    - run:
        name: Sparse Checkout
        command: |
          cd ~/project
          git init
          git config core.sparsecheckout true
          git remote add origin ${SOURCE_REPO}.git
          echo ${SOURCE_DIR} >.git/info/sparse-checkout
          git pull origin ${SOURCE_BRANCH}

jobs:
  install_deps:
    executor:
      name: fe-default
    steps:
    - sparse-checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ .Branch }}-{{ checksum "yarn.lock"}}
        - v1-dependencies-{{ .Branch }}
        - v1-dependencies-
    - run:
        name: Yarn Install
        command: yarn install
    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "yarn.lock"}}
    - persist_to_workspace:
        root: ~/project/apl/fe
        paths:
        - node_modules/*

  lint:
    executor:
      name: fe-default
    steps:
    - sparse-checkout
    - attach_workspace:
        at: ~/project/apl/fe
    - run:
        name: Make Report Directory
        command: mkdir reports
    - run:
        name: Lint
        command: npx eslint ./src --ext .ts,tsx --format junit --output-file ./reports/eslint/eslint.xml
    - store_test_results:
        path: reports
    - store_artifacts:
        path: reports

  build:
    executor:
      name: fe-default
    steps:
    - sparse-checkout
    - attach_workspace:
        at: ~/project/apl/fe
    - run:
        name: Yarn build
        command: yarn build

  build-image:
    executor:
      name: fe-default
    steps:
    - sparse-checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        name: Docker login
        command: docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
    - run:
        name: Set registry url
        command: echo 'export REGISTORY_URL=${DOCKER_USER}/fe-web' >> $BASH_ENV
    - run:
        name: Docker pull.
        command: docker pull ${REGISTORY_URL}:latest
    - run:
        name: Docker build
        command: docker build -t ${REGISTORY_URL} --cache-from ${REGISTORY_URL}:latest . -f ./docker/Dockerfile
    - run:
        name: Docker push
        command: docker push ${REGISTORY_URL}

  notify:
    docker:
    - image: cimg/node:12.20
    steps:
    - run: echo "notify slack."
    - slack/notify:
        event: fail
        template: basic_fail_1
    - slack/notify:
        event: pass
        template: success_tagged_deploy_1

workflows:
  main:
    jobs:
    - install_deps
    - lint:
        requires:
        - install_deps
    - build:
        requires:
        - install_deps
    - build-image:
        requires:
        - install_deps
    - notify:
        requires:
        - lint
        - build
        context: SLACK_INTEGRATION
