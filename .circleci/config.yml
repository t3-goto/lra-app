version: 2.1
orbs:
  slack: circleci/slack@4.2.1

executors:
  fe_default:
    working_directory: ~/project/apl/fe
    docker:
    - image: cimg/node:12.20
    environment:
      SYSTEM: fe-web
      SOURCE_REPO: https://github.com/t3-goto/lra-app
      SOURCE_BRANCH: feature/mod-circleci
      SOURCE_DIR: apl/fe

  bff_default:
    working_directory: ~/project/apl/bff
    docker:
    - image: cimg/node:12.20
    environment:
      SYSTEM: bff-ap
      SOURCE_REPO: https://github.com/t3-goto/lra-app
      SOURCE_BRANCH: feature/mod-circleci
      SOURCE_DIR: apl/bff

  be_default:
    working_directory: ~/project/apl/be
    docker:
    - image: cimg/node:12.20
    environment:
      SYSTEM: be-ap
      SOURCE_REPO: https://github.com/t3-goto/lra-app
      SOURCE_BRANCH: feature/mod-circleci
      SOURCE_DIR: apl/be

commands:
  sparse_checkout:
    description: 'Sparse checkout for sub directories.'
    steps:
    - run:
        name: Sparse Checkout
        command: |
          cd ~/project
          git init
          git config core.sparsecheckout true
          git remote add origin ${SOURCE_REPO}.git
          echo ${SOURCE_DIR} >.git/info/sparse-checkout
          git pull origin ${SOURCE_BRANCH}
  install_deps:
    description: 'Install dependencies.'
    steps:
    - restore_cache:
        keys:
        - v1-dependencies-{{ .Branch }}-{{ checksum "yarn.lock"}}
        - v1-dependencies-{{ .Branch }}
        - v1-dependencies-
    - run:
        name: Yarn Install
        command: yarn install
    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "yarn.lock"}}
    - persist_to_workspace:
        root: ./
        paths:
        - node_modules/*
  eslint:
    description: 'Eslint.'
    steps:
    - attach_workspace:
        at: ./
    - run:
        name: Make Report Directory
        command: mkdir reports
    - run:
        name: Lint
        command: npx eslint ./src --ext .ts,tsx --format junit --output-file ./reports/eslint/eslint.xml
    - store_test_results:
        path: reports
    - store_artifacts:
        path: reports
  build:
    description: 'Yarn build'
    steps:
    - attach_workspace:
        at: ./
    - run:
        name: Yarn build
        command: yarn build
  docker-build:
    description: 'Docker build'
    steps:
    - setup_remote_docker:
        version: 19.03.13
        docker_layer_caching: false
    - run:
        name: Docker setup
        command: |
          docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
          echo "export DOCKER_BUILDKIT=1" >> $BASH_ENV
          echo "export REGISTORY_URL=${DOCKER_USER}/${SYSTEM}" >> $BASH_ENV
    - run:
        name: Docker build
        command: |
          docker build -t ${REGISTORY_URL}:latest --cache-from=${REGISTORY_URL}:build-env --build-arg BUILDKIT_INLINE_CACHE=1  . -f ./docker/Dockerfile
          docker build -t ${REGISTORY_URL}:build-env --target build-env --cache-from ${REGISTORY_URL}:build-env --build-arg BUILDKIT_INLINE_CACHE=1  . -f ./docker/Dockerfile &
          wait
          echo ${DOCKER_BUILDKIT}
          echo ${REGISTORY_URL}
    - run:
        name: Docker push
        command: |
          docker push {REGISTORY_URL}:latest &
          docker push {REGISTORY_URL}:build-env &
          wait
          echo ${DOCKER_BUILDKIT}
          echo ${REGISTORY_URL}

jobs:
  fe_install_deps:
    executor:
      name: fe_default
    steps:
    - sparse_checkout
    - install_deps

  bff_install_deps:
    executor:
      name: bff_default
    steps:
    - sparse_checkout
    - install_deps

  be_install_deps:
    executor:
      name: be_default
    steps:
    - sparse_checkout
    - install_deps

  fe_lint:
    executor:
      name: fe_default
    steps:
    - sparse_checkout
    - eslint

  bff_lint:
    executor:
      name: bff_default
    steps:
    - sparse_checkout
    - eslint

  be_lint:
    executor:
      name: be_default
    steps:
    - sparse_checkout
    - eslint

  fe_build:
    executor:
      name: fe_default
    steps:
    - sparse_checkout
    - build

  bff_build:
    executor:
      name: bff_default
    steps:
    - sparse_checkout
    - build

  be_build:
    executor:
      name: be_default
    steps:
    - sparse_checkout
    - build

  fe_build-image:
    executor:
      name: fe_default
    steps:
    - sparse_checkout
    - docker-build

  bff_build-image:
    executor:
      name: bff_default
    steps:
    - sparse_checkout
    - docker-build

  be_build-image:
    executor:
      name: be_default
    steps:
    - sparse_checkout
    - docker-build

  notify:
    docker:
    - image: cimg/node:12.20
    steps:
    - run: echo "notify slack."
    - slack/notify:
        event: fail
        template: basic_fail_1
    - slack/notify:
        event: pass
        template: success_tagged_deploy_1

workflows:
  fe_main:
    jobs:
    - fe_install_deps
    - fe_lint:
        requires:
        - fe_install_deps
    - fe_build:
        requires:
        - fe_install_deps
    - fe_build-image:
        requires:
        - fe_install_deps
        context: DOCKER_HUB
    - notify:
        requires:
        - fe_lint
        - fe_build
        - fe_build-image
        context: SLACK_INTEGRATION

  bff_main:
    jobs:
    - bff_install_deps
    - bff_lint:
        requires:
        - bff_install_deps
    - bff_build:
        requires:
        - bff_install_deps
    - bff_build-image:
        requires:
        - bff_install_deps
        context: DOCKER_HUB
    - notify:
        requires:
        - bff_lint
        - bff_build
        - bff_build-image
        context: SLACK_INTEGRATION

  be_main:
    jobs:
    - be_install_deps
    - be_lint:
        requires:
        - be_install_deps
    - be_build:
        requires:
        - be_install_deps
    - be_build-image:
        requires:
        - be_install_deps
        context: DOCKER_HUB
    - notify:
        requires:
        - be_lint
        - be_build
        - be_build-image
        context: SLACK_INTEGRATION
