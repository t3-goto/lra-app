{"version":3,"sources":["actions/auth.ts","actions/geolocation.ts","actions/restaurant.ts","reducers/auth.ts","reducers/geolocation.ts","reducers/restaurant.ts","sagas/auth.ts","services/geolocation/index.ts","sagas/geolocation.ts","sagas/restaurant.ts","sagas/index.ts","configureStore.ts","components/AuthTitleLabel.tsx","components/NameInputText.tsx","components/PasswordInputText.tsx","components/LoginButton.tsx","components/LoginTwitterButton.tsx","components/LoginFacebookButton.tsx","components/LoginIconButtonGroup.tsx","components/AuthCreateNewAccountLink.tsx","components/AuthSkipLoginLink.tsx","components/Login.tsx","containers/Login.ts","components/ConfirmPasswordInputText.tsx","components/RegisterButton.tsx","components/RegisterTwitterButton.tsx","components/RegisterFacebookButton.tsx","components/RegisterIconButtonGroup.tsx","components/AuthAlreadyHaveAnAccountLink.tsx","components/Register.tsx","containers/Register.ts","components/Header.tsx","components/Footer.tsx","components/RestaurantList.tsx","components/Search.tsx","containers/Search.ts","components/Top.tsx","containers/Top.ts","App.tsx","serviceWorker.ts","index.tsx","reducers/index.ts","services/http-cliient/common/HttpResponseHandler.ts","services/http-cliient/common/HttpProvider.ts","services/http-cliient/common/index.ts","services/http-cliient/index.ts","services/http-cliient/auth/index.ts","services/http-cliient/auth/authHttpClient.ts","services/http-cliient/common/HttpClient.ts","services/http-cliient/users/index.ts","services/http-cliient/users/usersHttpClient.ts","services/http-cliient/restaurants/index.ts","services/http-cliient/restaurants/restaurantsHttpClient.ts"],"names":["updateLoginUsername","payload","type","successLogin","failureLogin","failureRegister","successGeolocation","failureGeolocation","successRestaurant","failureRestaurant","successSearch","failureSearch","updateSearchRestaurants","recreateSearchRestaurants","initialLoginInfo","errorInfo","email","username","password","initialRegisterInfo","passwordConfirm","initialState","isLogin","accessToken","loginInfo","registerInfo","authReducer","state","action","isGeolocation","latitude","longitude","accuracy","geolocationReducer","isRestaurant","apiRestaurantsData","searchInfo","restaurants","searchText","restaurantReducer","handleRequestLogin","handleSuccessLogin","handleRequestRegister","handleSuccessRegister","take","select","auth","postAuthApiRequestSchema","call","authHttpClient","post","error","put","message","push","postUsersApiRequestSchema","usersHttpClient","successCallback","position","data","coords","errorCallback","errorNo","code","positionOptions","enableHighAccuracy","timeout","maximumAge","getCurrentPosition","a","navigator","geolocation","Promise","resolve","reject","handleRequestGeolocation","handleFinishGeolocation","handleRequestRestaurant","handleRequestSearch","getRestaurantsApiRequestSchema","restaurantsHttpClient","getAllByQuery","restDataArray","map","restData","img","shopImage1","title","name","genre","category","budget","cols","filter","restaurant","address","rootSaga","fork","useStyles","makeStyles","theme","createStyles","titleLabel","textAlign","fontFamily","fontSize","fontStyle","color","Component","props","className","classes","formControl","margin","spacing","input","width","FormControl","Input","startAdornment","InputAdornment","placeholder","value","onChange","e","target","loginButton","Button","variant","onClick","loginTwitterButton","borderWidth","borderColor","IconButton","loginFacebookButton","root","clsx","LoginTwitterButton","LoginFacebookButton","forgotPasswordLink","link","to","skipLoginLink","AuthTitleLabel","NameInputText","PasswordInputText","updateLoginPassword","AuthSkipLoginLink","resetLogin","LoginButton","requestLogin","LoginIconButtonGroup","AuthCreateNewAccountLink","connect","rootState","dispatch","updateLoginEmail","v","RegisterTwitterButton","RegisterFacebookButton","updateRegisterUsername","updateRegisterPassword","ConfirmPasswordInputText","updateRegisterPasswordConfirm","RegisterButton","requestRegister","RegisterIconButtonGroup","AuthAlreadyHaveAnAccountLink","resetRegister","updateRegisterEmail","padding","display","alignItems","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","marginRight","flex","iconButton","grow","flexGrow","height","HideOnScroll","children","window","trigger","useScrollTrigger","undefined","Slide","appear","direction","in","CssBaseline","AppBar","Toolbar","Paper","component","InputBase","inputProps","aria-label","React","useState","setValue","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","label","icon","flexWrap","justifyContent","overflow","background","paper","gridList","gridListTileBar","GridList","cellHeight","tileData","tile","GridListTile","key","src","alt","GridListTileBar","subtitle","actionIcon","Header","requestSearch","updateSearchText","RestaurantList","Footer","requestGeolocation","exact","path","Top","Login","Register","Search","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","isLocalhost","Boolean","location","hostname","match","history","createBrowserHistory","store","saga","createSagaMiddleware","middlewares","logger","router","createStore","combineReducers","connectRouter","rootReducer","composeWithDevTools","applyMiddleware","run","configureStore","StrictMode","ReactDOM","render","document","querySelector","URL","href","origin","addEventListener","process","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","HttpResponseHandler","HttpProvider","getAll","baseUrl","resourcePath","axios","model","params","getSingle","id","patch","remove","delete","options","HttpClient","this"],"mappings":"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","file":"static/js/main.3faff182.chunk.js","sourcesContent":["/**\n * Action Type Constants.\n */\nexport const UPDATE_LOGIN_EMAIL = 'UPDATE_LOGIN_EMAIL';\nexport const UPDATE_LOGIN_USERNAME = 'UPDATE_LOGIN_USERNAME';\nexport const UPDATE_LOGIN_PASSWORD = 'UPDATE_LOGIN_PASSWORD';\nexport const UPDATE_REGISTER_EMAIL = 'UPDATE_REGISTER_EMAIL';\nexport const UPDATE_REGISTER_USERNAME = 'UPDATE_REGISTER_USERNAME';\nexport const UPDATE_REGISTER_PASSWORD = 'UPDATE_REGISTER_PASSWORD';\nexport const UPDATE_REGISTER_PASSWORD_CONFIRM =\n  'UPDATE_REGISTER_PASSWORD_CONFIRM';\nexport const REQUEST_LOGIN = 'REQUEST_LOGIN';\nexport const SUCCESS_LOGIN = 'SUCCESS_LOGIN';\nexport const FAILURE_LOGIN = 'FAILURE_LOGIN';\nexport const REQUEST_REGISTER = 'REQUEST_REGISTER';\nexport const SUCCESS_REGISTER = 'SUCCESS_REGISTER';\nexport const FAILURE_REGISTER = 'FAILURE_REGISTER';\nexport const RESET_LOGIN = 'RESET_LOGIN';\nexport const RESET_REGISTER = 'RESET_REGISTER';\nexport const REQUEST_LOGOUT = 'REQUEST_LOGOUT';\nexport const SUCCESS_LOGOUT = 'SUCCESS_LOGOUT';\n\n/**\n * Action Creators: Update Login Email.\n */\nexport const updateLoginEmail = (payload: string) => {\n  return {\n    type: UPDATE_LOGIN_EMAIL as typeof UPDATE_LOGIN_EMAIL,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Update Login Username.\n */\nexport const updateLoginUsername = (payload: string) => {\n  return {\n    type: UPDATE_LOGIN_USERNAME as typeof UPDATE_LOGIN_USERNAME,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Update Login Password.\n */\nexport const updateLoginPassword = (payload: string) => {\n  return {\n    type: UPDATE_LOGIN_PASSWORD as typeof UPDATE_LOGIN_PASSWORD,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Update Register Email.\n */\nexport const updateRegisterEmail = (payload: string) => {\n  return {\n    type: UPDATE_REGISTER_EMAIL as typeof UPDATE_REGISTER_EMAIL,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Update Register Username.\n */\nexport const updateRegisterUsername = (payload: string) => {\n  return {\n    type: UPDATE_REGISTER_USERNAME as typeof UPDATE_REGISTER_USERNAME,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Update Register Password.\n */\nexport const updateRegisterPassword = (payload: string) => {\n  return {\n    type: UPDATE_REGISTER_PASSWORD as typeof UPDATE_REGISTER_PASSWORD,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Update Register Password Confirm.\n */\nexport const updateRegisterPasswordConfirm = (payload: string) => {\n  return {\n    type: UPDATE_REGISTER_PASSWORD_CONFIRM as typeof UPDATE_REGISTER_PASSWORD_CONFIRM,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Request Login.\n */\nexport const requestLogin = () => {\n  return {\n    type: REQUEST_LOGIN as typeof REQUEST_LOGIN,\n  };\n};\n\n/**\n * Action Creators: Success Login.\n */\nexport const successLogin = (payload: string) => {\n  return {\n    type: SUCCESS_LOGIN as typeof SUCCESS_LOGIN,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Failure Login.\n */\nexport const failureLogin = (payload: string) => {\n  return {\n    type: FAILURE_LOGIN as typeof FAILURE_LOGIN,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Request Register.\n */\nexport const requestRegister = () => {\n  return {\n    type: REQUEST_REGISTER as typeof REQUEST_REGISTER,\n  };\n};\n\n/**\n * Action Creators: Success Register.\n */\nexport const successRegister = () => {\n  return {\n    type: SUCCESS_REGISTER as typeof SUCCESS_REGISTER,\n  };\n};\n\n/**\n * Action Creators: Failure Register.\n */\nexport const failureRegister = (payload: string) => {\n  return {\n    type: FAILURE_REGISTER as typeof FAILURE_REGISTER,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Reset Login.\n */\nexport const resetLogin = () => {\n  return {\n    type: RESET_LOGIN as typeof RESET_LOGIN,\n  };\n};\n\n/**\n * Action Creators: Reset Register.\n */\nexport const resetRegister = () => {\n  return {\n    type: RESET_REGISTER as typeof RESET_REGISTER,\n  };\n};\n\n/**\n * Action Creators: Request Logout.\n */\nexport const requestLogout = () => {\n  return {\n    type: REQUEST_LOGOUT as typeof REQUEST_LOGOUT,\n  };\n};\n\n/**\n * Action Creators: Success Logout.\n */\nexport const successLogout = () => {\n  return {\n    type: SUCCESS_LOGOUT as typeof SUCCESS_LOGOUT,\n  };\n};\n\n/**\n * Action Creater Types\n */\nexport type AuthActionCreators = {\n  updateLoginEmail: typeof updateLoginEmail;\n  updateLoginUsername: typeof updateLoginUsername;\n  updateLoginPassword: typeof updateLoginPassword;\n  updateRegisterEmail: typeof updateRegisterEmail;\n  updateRegisterUsername: typeof updateRegisterUsername;\n  updateRegisterPassword: typeof updateRegisterPassword;\n  updateRegisterPasswordConfirm: typeof updateRegisterPasswordConfirm;\n  requestLogin: typeof requestLogin;\n  successLogin: typeof successLogin;\n  failureLogin: typeof failureLogin;\n  requestRegister: typeof requestRegister;\n  successRegister: typeof successRegister;\n  failureRegister: typeof failureRegister;\n  resetLogin: typeof resetLogin;\n  resetRegister: typeof resetRegister;\n  requestLogout: typeof requestLogout;\n  successLogout: typeof successLogout;\n};\n\n/**\n * Action Types.\n */\nexport type AuthAction = ReturnType<\n  | typeof updateLoginEmail\n  | typeof updateLoginUsername\n  | typeof updateLoginPassword\n  | typeof updateRegisterEmail\n  | typeof updateRegisterUsername\n  | typeof updateRegisterPassword\n  | typeof updateRegisterPasswordConfirm\n  | typeof requestLogin\n  | typeof successLogin\n  | typeof failureLogin\n  | typeof requestRegister\n  | typeof successRegister\n  | typeof failureRegister\n  | typeof resetLogin\n  | typeof resetRegister\n  | typeof requestLogout\n  | typeof successLogout\n>;\n","import { PositionInfo } from '../interfaces/PositionInfo';\n\n/**\n * Action Type Constants.\n */\nexport const REQUEST_GEOLOCATION = 'REQUEST_GEOLOCATION';\nexport const SUCCESS_GEOLOCATION = 'SUCCESS_GEOLOCATION';\nexport const FAILURE_GEOLOCATION = 'FAILURE_GEOLOCATION';\nexport const FINISH_GEOLOCATION = 'FINISH_GEOLOCATION';\n\n/**\n * Action Creators: Request Geolocation.\n */\nexport const requestGeolocation = () => {\n  return {\n    type: REQUEST_GEOLOCATION as typeof REQUEST_GEOLOCATION,\n  };\n};\n\n/**\n * Action Creators: Success Geolocation.\n */\nexport const successGeolocation = (payload: PositionInfo) => {\n  return {\n    type: SUCCESS_GEOLOCATION as typeof SUCCESS_GEOLOCATION,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Failure Geolocation.\n */\nexport const failureGeolocation = (payload: string) => {\n  return {\n    type: FAILURE_GEOLOCATION as typeof FAILURE_GEOLOCATION,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Finish Geolocation.\n */\nexport const finishGeolocation = () => {\n  return {\n    type: FINISH_GEOLOCATION as typeof FINISH_GEOLOCATION,\n  };\n};\n\n/**\n * Action Creater Types\n */\nexport type GeolocationActionCreators = {\n  requestGeolocation: typeof requestGeolocation;\n  successGeolocation: typeof successGeolocation;\n  failureGeolocation: typeof failureGeolocation;\n  finishGeolocation: typeof finishGeolocation;\n};\n\n/**\n * Action Types.\n */\nexport type GeolocationAction = ReturnType<\n  | typeof requestGeolocation\n  | typeof successGeolocation\n  | typeof failureGeolocation\n  | typeof finishGeolocation\n>;\n","import { Restaurant } from '../interfaces/Restaurant';\n\n/**\n * Action Type Constants.\n */\nexport const REQUEST_RESTAURANT = 'REQUEST_RESTAURANT';\nexport const SUCCESS_RESTAURANT = 'SUCCESS_RESTAURANT';\nexport const FAILURE_RESTAURANT = 'FAILURE_RESTAURANT';\nexport const REQUEST_SEARCH = 'REQUEST_SEARCH';\nexport const SUCCESS_SEARCH = 'SUCCESS_SEARCH';\nexport const FAILURE_SEARCH = 'FAILURE_SEARCH';\nexport const UPDATE_SEARCH_TEXT = 'UPDATE_SEARCH_TEXT';\nexport const UPDATE_SEARCH_RESTAURANTS = 'UPDATE_SEARCH_RESTAURANTS';\nexport const RECREATE_SEARCH_RESTAURANTS = 'RECREATE_SEARCH_RESTAURANTS';\n\n/**\n * Action Creators: Request Restaurant.\n */\nexport const requestRestaurant = () => {\n  return {\n    type: REQUEST_RESTAURANT as typeof REQUEST_RESTAURANT,\n  };\n};\n\n/**\n * Action Creators: Success Restaurant.\n */\nexport const successRestaurant = (payload: any) => {\n  return {\n    type: SUCCESS_RESTAURANT as typeof SUCCESS_RESTAURANT,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Failure Restaurant.\n */\nexport const failureRestaurant = (payload: string) => {\n  return {\n    type: FAILURE_RESTAURANT as typeof FAILURE_RESTAURANT,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Request Search.\n */\nexport const requestSearch = () => {\n  return {\n    type: REQUEST_SEARCH as typeof REQUEST_SEARCH,\n  };\n};\n\n/**\n * Action Creators: Success Search.\n */\nexport const successSearch = (payload: any) => {\n  return {\n    type: SUCCESS_SEARCH as typeof SUCCESS_SEARCH,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Failure Search.\n */\nexport const failureSearch = (payload: string) => {\n  return {\n    type: FAILURE_SEARCH as typeof FAILURE_SEARCH,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Update Search Text.\n */\nexport const updateSearchText = (payload: string) => {\n  return {\n    type: UPDATE_SEARCH_TEXT as typeof UPDATE_SEARCH_TEXT,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Update Search Restaurants.\n */\nexport const updateSearchRestaurants = (payload: Restaurant[]) => {\n  return {\n    type: UPDATE_SEARCH_RESTAURANTS as typeof UPDATE_SEARCH_RESTAURANTS,\n    payload,\n  };\n};\n\n/**\n * Action Creators: Recreate Search Restaurants.\n */\nexport const recreateSearchRestaurants = (payload: Restaurant[]) => {\n  return {\n    type: RECREATE_SEARCH_RESTAURANTS as typeof RECREATE_SEARCH_RESTAURANTS,\n    payload,\n  };\n};\n\n/**\n * Action Creater Types\n */\nexport type RestaurantActionCreators = {\n  requestRestaurant: typeof requestRestaurant;\n  successRestaurant: typeof successRestaurant;\n  failureRestaurant: typeof failureRestaurant;\n  requestSearch: typeof requestSearch;\n  successSearch: typeof successSearch;\n  failureSearch: typeof failureSearch;\n  updateSearchText: typeof updateSearchText;\n  updateSearchRestaurants: typeof updateSearchRestaurants;\n  recreateSearchRestaurants: typeof recreateSearchRestaurants;\n};\n\n/**\n * Action Types.\n */\nexport type RestaurantAction = ReturnType<\n  | typeof requestRestaurant\n  | typeof successRestaurant\n  | typeof failureRestaurant\n  | typeof requestSearch\n  | typeof successSearch\n  | typeof failureSearch\n  | typeof updateSearchText\n  | typeof updateSearchRestaurants\n  | typeof recreateSearchRestaurants\n>;\n","import { Reducer } from 'redux';\nimport {\n  UPDATE_LOGIN_EMAIL,\n  UPDATE_LOGIN_USERNAME,\n  UPDATE_LOGIN_PASSWORD,\n  UPDATE_REGISTER_EMAIL,\n  UPDATE_REGISTER_USERNAME,\n  UPDATE_REGISTER_PASSWORD,\n  UPDATE_REGISTER_PASSWORD_CONFIRM,\n  REQUEST_LOGIN,\n  SUCCESS_LOGIN,\n  FAILURE_LOGIN,\n  REQUEST_REGISTER,\n  SUCCESS_REGISTER,\n  FAILURE_REGISTER,\n  REQUEST_LOGOUT,\n  SUCCESS_LOGOUT,\n  RESET_LOGIN,\n  RESET_REGISTER,\n  AuthAction as Action,\n} from '../actions';\n\n/**\n * IState Login Info.\n */\ninterface LoginInfo {\n  errorInfo: string;\n  email: string;\n  username: string;\n  password: string;\n}\n\n/**\n * IState Register Info.\n */\ninterface RegisterInfo {\n  errorInfo: string;\n  email: string;\n  username: string;\n  password: string;\n  passwordConfirm: string;\n}\n\n/**\n * IState Auth State.\n */\nexport interface AuthState {\n  isLogin: boolean;\n  accessToken: string;\n  loginInfo: LoginInfo;\n  registerInfo: RegisterInfo;\n}\n\n/**\n * Initial State Login Info.\n */\nconst initialLoginInfo: LoginInfo = {\n  errorInfo: '',\n  email: '',\n  username: '',\n  password: '',\n};\n\n/**\n * Initial State Register Info.\n */\nconst initialRegisterInfo: RegisterInfo = {\n  errorInfo: '',\n  email: '',\n  username: '',\n  password: '',\n  passwordConfirm: '',\n};\n\n/**\n * Initial State Auth State.\n */\nconst initialState: AuthState = {\n  isLogin: false,\n  accessToken: '',\n  loginInfo: initialLoginInfo,\n  registerInfo: initialRegisterInfo,\n};\n\n/**\n * Auth Reducer.\n */\nexport const authReducer: Reducer<AuthState, Action> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case UPDATE_LOGIN_EMAIL: {\n      return {\n        ...state,\n        loginInfo: { ...state.loginInfo, email: action.payload },\n      };\n    }\n    case UPDATE_LOGIN_USERNAME: {\n      return {\n        ...state,\n        loginInfo: { ...state.loginInfo, username: action.payload },\n      };\n    }\n    case UPDATE_LOGIN_PASSWORD: {\n      return {\n        ...state,\n        loginInfo: { ...state.loginInfo, password: action.payload },\n      };\n    }\n    case UPDATE_REGISTER_EMAIL: {\n      return {\n        ...state,\n        registerInfo: { ...state.registerInfo, email: action.payload },\n      };\n    }\n    case UPDATE_REGISTER_USERNAME: {\n      return {\n        ...state,\n        registerInfo: { ...state.registerInfo, username: action.payload },\n      };\n    }\n    case UPDATE_REGISTER_PASSWORD: {\n      return {\n        ...state,\n        registerInfo: { ...state.registerInfo, password: action.payload },\n      };\n    }\n    case UPDATE_REGISTER_PASSWORD_CONFIRM: {\n      return {\n        ...state,\n        registerInfo: {\n          ...state.registerInfo,\n          passwordConfirm: action.payload,\n        },\n      };\n    }\n    case REQUEST_LOGIN: {\n      return {\n        ...state,\n      };\n    }\n    case SUCCESS_LOGIN: {\n      return {\n        ...state,\n        accessToken: action.payload,\n        isLogin: true,\n        loginInfo: { ...state.loginInfo, errorInfo: '' },\n      };\n    }\n    case FAILURE_LOGIN: {\n      return {\n        ...state,\n        isLogin: false,\n        loginInfo: { ...state.loginInfo, errorInfo: action.payload },\n      };\n    }\n    case REQUEST_REGISTER: {\n      return {\n        ...state,\n      };\n    }\n    case SUCCESS_REGISTER: {\n      return {\n        ...state,\n        registerInfo: { ...state.registerInfo, errorInfo: '' },\n      };\n    }\n    case FAILURE_REGISTER: {\n      return {\n        ...state,\n        registerInfo: { ...state.registerInfo, errorInfo: action.payload },\n      };\n    }\n    case RESET_LOGIN: {\n      return {\n        ...state,\n        loginInfo: { ...initialLoginInfo },\n      };\n    }\n    case RESET_REGISTER: {\n      return {\n        ...state,\n        registerInfo: { ...initialRegisterInfo },\n      };\n    }\n    case REQUEST_LOGOUT: {\n      return {\n        ...state,\n      };\n    }\n    case SUCCESS_LOGOUT: {\n      return { ...state, ...initialState };\n    }\n    default: {\n      const _: never = action;\n      return state;\n    }\n  }\n};\n","import { Reducer } from 'redux';\nimport {\n  REQUEST_GEOLOCATION,\n  SUCCESS_GEOLOCATION,\n  FAILURE_GEOLOCATION,\n  FINISH_GEOLOCATION,\n  GeolocationAction as Action,\n} from '../actions';\n\n/**\n * IState Geolocation State.\n */\nexport interface GeolocationState {\n  isGeolocation: boolean;\n  errorInfo: string;\n  latitude: number;\n  longitude: number;\n  accuracy: number;\n}\n\n/**\n * Initial State Geolocation State.\n */\nconst initialState: GeolocationState = {\n  isGeolocation: false,\n  errorInfo: '',\n  latitude: 0,\n  longitude: 0,\n  accuracy: 0,\n};\n\n/**\n * Auth Reducer.\n */\nexport const geolocationReducer: Reducer<GeolocationState, Action> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case REQUEST_GEOLOCATION: {\n      return {\n        ...state,\n      };\n    }\n    case SUCCESS_GEOLOCATION: {\n      return {\n        ...state,\n        isGeolocation: true,\n        errorInfo: '',\n        latitude: action.payload.latitude,\n        longitude: action.payload.longitude,\n        accuracy: action.payload.accuracy,\n      };\n    }\n    case FAILURE_GEOLOCATION: {\n      return {\n        ...state,\n        isGeolocation: false,\n        errorInfo: action.payload,\n      };\n    }\n    case FINISH_GEOLOCATION: {\n      return {\n        ...state,\n      };\n    }\n    default: {\n      const _: never = action;\n      return state;\n    }\n  }\n};\n","import { Reducer } from 'redux';\nimport {\n  REQUEST_RESTAURANT,\n  SUCCESS_RESTAURANT,\n  FAILURE_RESTAURANT,\n  REQUEST_SEARCH,\n  SUCCESS_SEARCH,\n  FAILURE_SEARCH,\n  UPDATE_SEARCH_TEXT,\n  UPDATE_SEARCH_RESTAURANTS,\n  RECREATE_SEARCH_RESTAURANTS,\n  RestaurantAction as Action,\n} from '../actions';\nimport { Restaurant } from '../interfaces/Restaurant';\n\n/**\n * IState Search Info.\n */\nexport interface SearchInfo {\n  restaurants: Restaurant[];\n  searchText: string;\n}\n\n/**\n * IState Restaurant State.\n */\nexport interface RestaurantState {\n  isRestaurant: boolean;\n  errorInfo: string;\n  apiRestaurantsData: any[];\n  searchInfo: SearchInfo;\n}\n\n/**\n * Initial State Search Info.\n */\nconst initialSearchInfo: SearchInfo = {\n  restaurants: [],\n  searchText: '',\n};\n\n/**\n * Initial State Restaurant State.\n */\nconst initialState: RestaurantState = {\n  isRestaurant: false,\n  errorInfo: '',\n  apiRestaurantsData: [],\n  searchInfo: initialSearchInfo,\n};\n\n/**\n * Auth Reducer.\n */\nexport const restaurantReducer: Reducer<RestaurantState, Action> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case REQUEST_RESTAURANT: {\n      return {\n        ...state,\n      };\n    }\n    case SUCCESS_RESTAURANT: {\n      return {\n        ...state,\n        isRestaurant: true,\n        errorInfo: '',\n        apiRestaurantsData: action.payload,\n      };\n    }\n    case FAILURE_RESTAURANT: {\n      return {\n        ...state,\n        isRestaurant: false,\n        errorInfo: action.payload,\n      };\n    }\n    case REQUEST_SEARCH: {\n      return {\n        ...state,\n      };\n    }\n    case SUCCESS_SEARCH: {\n      return {\n        ...state,\n        isRestaurant: true,\n        errorInfo: '',\n        apiRestaurantsData: action.payload,\n      };\n    }\n    case FAILURE_SEARCH: {\n      return {\n        ...state,\n        isRestaurant: false,\n        errorInfo: action.payload,\n      };\n    }\n    case UPDATE_SEARCH_TEXT: {\n      return {\n        ...state,\n        searchInfo: { ...state.searchInfo, searchText: action.payload },\n      };\n    }\n    case UPDATE_SEARCH_RESTAURANTS: {\n      return {\n        ...state,\n        searchInfo: {\n          ...state.searchInfo,\n          restaurants: [...state.searchInfo.restaurants, ...action.payload],\n        },\n      };\n    }\n    case RECREATE_SEARCH_RESTAURANTS: {\n      return {\n        ...state,\n        searchInfo: {\n          ...state.searchInfo,\n          restaurants: [...action.payload],\n        },\n      };\n    }\n    default: {\n      const _: never = action;\n      return state;\n    }\n  }\n};\n","import { call, put, take, select } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport {\n  REQUEST_LOGIN,\n  SUCCESS_LOGIN,\n  REQUEST_LOGOUT,\n  REQUEST_REGISTER,\n  SUCCESS_REGISTER,\n  successLogin,\n  failureLogin,\n  successLogout,\n  successRegister,\n  failureRegister,\n  resetRegister,\n  updateLoginUsername,\n} from '../actions';\nimport {\n  authHttpClient,\n  usersHttpClient,\n  PostAuthApiRequestSchema,\n  PostAuthApiResponseSchema,\n  PostUsersApiRequestSchema,\n  PostUsersApiResponseSchema,\n} from '../services/http-cliient';\nimport { RootState } from '../reducers';\n\n/**\n * Handle The Action Type of REQUEST_LOGIN.\n */\nexport function* handleRequestLogin() {\n  while (true) {\n    yield take(REQUEST_LOGIN);\n    const {\n      username,\n      password,\n    } = ((yield select()) as RootState).auth.loginInfo;\n    const postAuthApiRequestSchema: PostAuthApiRequestSchema = {\n      username,\n      password,\n    };\n    type returnType = {\n      payload: PostAuthApiResponseSchema;\n      error: any;\n    };\n    const { payload, error }: returnType = yield call(\n      authHttpClient.post,\n      postAuthApiRequestSchema\n    );\n    if (!payload && error) {\n      yield put(failureLogin(error.message));\n      continue;\n    }\n    yield put(successLogin(payload.accessToken));\n    yield take(REQUEST_LOGOUT);\n    yield put(successLogout());\n  }\n}\n\n/**\n * Handle The Action Type of SUCCESS_LOGIN.\n */\nexport function* handleSuccessLogin() {\n  while (true) {\n    yield take(SUCCESS_LOGIN);\n    yield put(push('/search'));\n  }\n}\n\n/**\n * Handle The Action Type of REQUEST_REGISTER.\n */\nexport function* handleRequestRegister() {\n  while (true) {\n    yield take(REQUEST_REGISTER);\n    const {\n      username,\n      password,\n    } = ((yield select()) as RootState).auth.registerInfo;\n    const postUsersApiRequestSchema: PostUsersApiRequestSchema = {\n      username,\n      password,\n    };\n    type returnType = {\n      payload: PostUsersApiResponseSchema;\n      error: any;\n    };\n    const { payload, error }: returnType = yield call(\n      usersHttpClient.post,\n      postUsersApiRequestSchema\n    );\n\n    if (!payload && error) {\n      yield put(failureRegister(error.message));\n      continue;\n    }\n    yield put(successRegister());\n    yield put(resetRegister());\n    yield put(updateLoginUsername(payload.username));\n  }\n}\n\n/**\n * Handle The Action Type of SUCCESS_REGISTER.\n */\nexport function* handleSuccessRegister() {\n  while (true) {\n    yield take(SUCCESS_REGISTER);\n    yield put(push('/login'));\n  }\n}\n","import { PositionInfo } from '../../interfaces/PositionInfo';\n\n/**\n * Success Callback of the Get Current Position.\n */\nconst successCallback: PositionCallback = (\n  position\n): { payload: PositionInfo } => {\n  const data = position.coords;\n  const retObj: PositionInfo = {\n    latitude: data.latitude,\n    longitude: data.longitude,\n    accuracy: data.accuracy,\n  };\n  return { payload: retObj };\n};\n\n/**\n * Error Callback of the Get Current Position.\n */\nconst errorCallback: PositionErrorCallback = (error): { error: any } => {\n  const errorInfo = [\n    '原因不明のエラーが発生しました。',\n    '位置情報の取得が許可されませんでした。',\n    '電波状況などで位置情報が取得できませんでした。',\n    '位置情報の取得に時間がかかり過ぎてタイムアウトしました。',\n  ];\n  const errorNo = error.code;\n  const errorMessage = `[エラー番号: ${errorNo}]\\n${errorInfo[errorNo]}`;\n  return { error: { message: errorMessage } };\n};\n\n/**\n * Position Options of the Get Current Position.\n */\nconst positionOptions: PositionOptions = {\n  enableHighAccuracy: false,\n  timeout: 8000,\n  maximumAge: 2000,\n};\n\n/**\n * Get Current Position.\n */\nexport const getCurrentPosition = async () => {\n  try {\n    if (navigator.geolocation) {\n      const position = await new Promise<Position>((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(\n          resolve,\n          reject,\n          positionOptions\n        );\n      });\n      return successCallback(position);\n    }\n    const errorMessage = 'お使いの端末は、GeoLacation APIに対応していません。';\n    return { error: { message: errorMessage } };\n  } catch (positionError) {\n    return errorCallback(positionError);\n  }\n};\n","import { call, put, take } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport {\n  REQUEST_GEOLOCATION,\n  FINISH_GEOLOCATION,\n  successGeolocation,\n  failureGeolocation,\n  finishGeolocation,\n  requestRestaurant,\n} from '../actions';\nimport { getCurrentPosition } from '../services/geolocation';\n\n/**\n * Handle The Action Type of REQUEST_GEOLOCATION.\n */\nexport function* handleRequestGeolocation() {\n  while (true) {\n    yield take(REQUEST_GEOLOCATION);\n    const { payload, error } = yield call(getCurrentPosition);\n    if (!payload && error) {\n      yield put(failureGeolocation(error.message));\n    } else {\n      yield put(successGeolocation(payload));\n    }\n    yield put(finishGeolocation());\n    yield put(requestRestaurant());\n  }\n}\n\n/**\n * Handle The Action Type of FINISH_GEOLOCATION.\n */\nexport function* handleFinishGeolocation() {\n  while (true) {\n    yield take(FINISH_GEOLOCATION);\n    yield put(push('/login'));\n  }\n}\n","import { call, put, take, select } from 'redux-saga/effects';\nimport {\n  REQUEST_RESTAURANT,\n  REQUEST_SEARCH,\n  successRestaurant,\n  failureRestaurant,\n  successSearch,\n  failureSearch,\n  updateSearchRestaurants,\n  recreateSearchRestaurants,\n} from '../actions';\nimport { RootState } from '../reducers';\nimport { Restaurant } from '../interfaces';\nimport {\n  restaurantsHttpClient,\n  GetRestaurantsApiRequestSchema,\n  GetRestaurantsApiResponseSchema,\n} from '../services/http-cliient';\n\n/**\n * Handle The Action Type of REQUEST_RESTAURANT.\n */\nexport function* handleRequestRestaurant() {\n  while (true) {\n    yield take(REQUEST_RESTAURANT);\n    const { latitude, longitude } = ((yield select()) as RootState).geolocation;\n    const getRestaurantsApiRequestSchema: GetRestaurantsApiRequestSchema = {\n      latitude,\n      longitude,\n    };\n    type returnType = {\n      payload: GetRestaurantsApiResponseSchema;\n      error: any;\n    };\n    const { payload, error }: returnType = yield call(\n      restaurantsHttpClient.getAllByQuery,\n      getRestaurantsApiRequestSchema\n    );\n    if (!payload && error) {\n      yield put(failureRestaurant(error.message));\n    } else {\n      yield put(successRestaurant(payload.restaurants));\n      const restDataArray = payload.restaurants;\n      const restaurants = restDataArray\n        .map((restData) => {\n          const restaurant: Restaurant = {\n            img: restData.shopImage1,\n            title: restData.name,\n            genre: restData.category,\n            budget: restData.budget,\n            cols: 1,\n          };\n          return restaurant;\n        })\n        .filter((restaurant: Restaurant) => {\n          return !!restaurant.img;\n        });\n      yield put(updateSearchRestaurants(restaurants));\n    }\n  }\n}\n\n/**\n * Handle The Action Type of REQUEST_SEARCH.\n */\nexport function* handleRequestSearch() {\n  while (true) {\n    yield take(REQUEST_SEARCH);\n    const address = ((yield select()) as RootState).restaurant.searchInfo\n      .searchText;\n    const getRestaurantsApiRequestSchema: GetRestaurantsApiRequestSchema = {\n      address,\n    };\n    type returnType = {\n      payload: GetRestaurantsApiResponseSchema;\n      error: any;\n    };\n    const { payload, error }: returnType = yield call(\n      restaurantsHttpClient.getAllByQuery,\n      getRestaurantsApiRequestSchema\n    );\n\n    if (!payload && error) {\n      yield put(failureSearch(error.message));\n    } else {\n      yield put(successSearch(payload.restaurants));\n      const restDataArray = payload.restaurants;\n      const restaurants = restDataArray\n        .map((restData) => {\n          const restaurant: Restaurant = {\n            img: restData.shopImage1,\n            title: restData.name,\n            genre: restData.category,\n            budget: restData.budget,\n            cols: 1,\n          };\n          return restaurant;\n        })\n        .filter((restaurant: Restaurant) => {\n          return !!restaurant.img;\n        });\n      yield put(recreateSearchRestaurants(restaurants));\n    }\n  }\n}\n","import { fork } from 'redux-saga/effects';\nimport {\n  handleRequestLogin,\n  handleRequestRegister,\n  handleSuccessLogin,\n  handleSuccessRegister,\n} from './auth';\nimport {\n  handleRequestGeolocation,\n  handleFinishGeolocation,\n} from './geolocation';\nimport { handleRequestRestaurant, handleRequestSearch } from './restaurant';\n\n/**\n * Root Saga.\n */\nexport function* rootSaga() {\n  yield fork(handleRequestLogin);\n  yield fork(handleSuccessLogin);\n  yield fork(handleRequestRegister);\n  yield fork(handleSuccessRegister);\n  yield fork(handleRequestGeolocation);\n  yield fork(handleFinishGeolocation);\n  yield fork(handleRequestRestaurant);\n  yield fork(handleRequestSearch);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { routerMiddleware as router } from 'connected-react-router';\nimport logger from 'redux-logger';\nimport { History } from 'history';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootReducer } from './reducers';\nimport { rootSaga } from './sagas';\n\n/**\n * Configure Store.\n */\nexport const configureStore = (history: History) => {\n  /**\n   * Saga.\n   */\n  const saga = createSagaMiddleware();\n\n  /**\n   * Middleware.\n   */\n  const middlewares = [logger, saga, router(history)];\n\n  /**\n   * Store.\n   */\n  const store = createStore(\n    rootReducer(history),\n    composeWithDevTools(applyMiddleware(...middlewares))\n  );\n\n  saga.run(rootSaga);\n\n  return store;\n};\n","import * as React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    titleLabel: {\n      textAlign: 'center',\n      fontFamily: 'Josefin Sans',\n      fontSize: '24px',\n      fontStyle: 'normal',\n      color: '#fff',\n    },\n  })\n);\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n  return (\n    <div className={className}>\n      <h1 className={classes.titleLabel}>Find the Best Restaurant</h1>\n    </div>\n  );\n};\n\nexport default Component;\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Person from '@material-ui/icons/Person';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(0),\n    },\n    input: {\n      textAlign: 'left',\n      fontFamily: 'Josefin Sans',\n      fontSize: '16px',\n      fontStyle: 'normal',\n      color: '#fff',\n      width: '290px',\n    },\n  })\n);\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n  value: string;\n  onChange: any;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const classes = useStyles();\n  const { className } = props;\n\n  return (\n    <div className={className}>\n      <FormControl className={classes.formControl}>\n        <Input\n          className={classes.input}\n          startAdornment={\n            <InputAdornment position='start'>\n              <Person />\n            </InputAdornment>\n          }\n          placeholder='Teruki Goto'\n          value={props.value}\n          onChange={(e) => {\n            props.onChange(e.target.value);\n          }}\n        />\n      </FormControl>\n    </div>\n  );\n};\n\nexport default Component;\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Lock from '@material-ui/icons/Lock';\n\n// import IconButton from '@material-ui/core/IconButton';\n// import Visibility from '@material-ui/icons/Visibility';\n// import VisibilityOff from '@material-ui/icons/VisibilityOff';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(0),\n    },\n    input: {\n      textAlign: 'left',\n      fontFamily: 'Josefin Sans',\n      fontSize: '16px',\n      fontStyle: 'normal',\n      color: '#fff',\n      width: '290px',\n    },\n  })\n);\n\n/**\n * IState.\n */\n// interface IState {\n//   showPassword: boolean;\n// }\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n  value: string;\n  onChange: any;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const classes = useStyles();\n\n  // const [values, setValues] = React.useState<IState>({\n  //   showPassword: false,\n  // });\n\n  // const handleClickShowPassword = () => {\n  //   setValues({ ...values, showPassword: !values.showPassword });\n  // };\n\n  // const handleMouseDownPassword = (\n  //   event: React.MouseEvent<HTMLButtonElement>\n  // ) => {\n  //   event.preventDefault();\n  // };\n\n  return (\n    <div className={props.className}>\n      <FormControl className={classes.formControl}>\n        <Input\n          type='password'\n          className={classes.input}\n          placeholder='Password'\n          startAdornment={\n            <InputAdornment position='start'>\n              <Lock />\n            </InputAdornment>\n          }\n          value={props.value}\n          onChange={(e) => {\n            props.onChange(e.target.value);\n          }}\n        />\n      </FormControl>\n      {/* <FormControl className={classes.formControl}>\n        <Input\n          type={values.showPassword ? 'text' : 'password'}\n          className={classes.input}\n          placeholder='Password'\n          startAdornment={\n            <InputAdornment position='start'>\n              <IconButton\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n              >\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl> */}\n    </div>\n  );\n};\n\nexport default Component;\n","import * as React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loginButton: {\n      textAlign: 'center',\n      fontFamily: 'Josefin Sans',\n      fontSize: '16px',\n      fontStyle: 'normal',\n      color: '#FFF',\n      width: '290px',\n    },\n  })\n);\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n  onClick: any;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n  return (\n    <div className={className}>\n      <Button\n        variant='contained'\n        color='primary'\n        className={classes.loginButton}\n        onClick={(e) => {\n          props.onClick();\n        }}\n      >\n        Login\n      </Button>\n    </div>\n  );\n};\n\nexport default Component;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Twitter from '@material-ui/icons/Twitter';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loginTwitterButton: {\n      textAlign: 'center',\n      borderWidth: '1px',\n      borderColor: '#FFF',\n    },\n  })\n);\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n\n  return (\n    <span className={className}>\n      <IconButton className={classes.loginTwitterButton}>\n        <Twitter color='primary' />\n      </IconButton>\n    </span>\n  );\n};\n\nexport default Component;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Facebook from '@material-ui/icons/Facebook';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loginFacebookButton: {\n      textAlign: 'center',\n    },\n  })\n);\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n\n  return (\n    <span className={className}>\n      <IconButton className={classes.loginFacebookButton}>\n        <Facebook color='primary' />\n      </IconButton>\n    </span>\n  );\n};\n\nexport default Component;\n","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport LoginTwitterButton from './LoginTwitterButton';\nimport LoginFacebookButton from './LoginFacebookButton';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  })\n);\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(className, classes.root)}>\n      <LoginTwitterButton />\n      <LoginFacebookButton />\n    </div>\n  );\n};\n\nexport default Component;\n","import * as React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    forgotPasswordLink: {\n      textAlign: 'center',\n      fontFamily: 'Josefin Sans',\n      fontSize: '16px',\n      fontStyle: 'normal',\n      color: '#fff',\n      // borderBottom: 'solid 1px #FFF',\n    },\n    link: {\n      color: '#FF7F50',\n    },\n  })\n);\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n  onClick: any;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n  return (\n    <span className={className}>\n      <h1 className={classes.forgotPasswordLink}>\n        <Link\n          to='/register'\n          className={classes.link}\n          onClick={(e) => {\n            props.onClick();\n          }}\n        >\n          Create\n        </Link>{' '}\n        New Account?\n      </h1>\n    </span>\n  );\n};\n\nexport default Component;\n","import * as React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    skipLoginLink: {\n      textAlign: 'center',\n      fontFamily: 'Josefin Sans',\n      fontSize: '16px',\n      fontStyle: 'normal',\n      color: '#fff',\n      // borderBottom: 'solid 1px #FFF',\n    },\n    link: {\n      color: '#FF7F50',\n    },\n  })\n);\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n  onClick: any;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n  return (\n    <span className={className}>\n      <h1 className={classes.skipLoginLink}>\n        <Link\n          to='/search'\n          className={classes.link}\n          onClick={(e) => {\n            props.onClick();\n          }}\n        >\n          Skip\n        </Link>{' '}\n        Login?\n      </h1>\n    </span>\n  );\n};\n\nexport default Component;\n","import * as React from 'react';\nimport AuthTitleLabel from './AuthTitleLabel';\nimport EmailInputText from './EmailInputText';\nimport NameInputText from './NameInputText';\nimport PasswordInputText from './PasswordInputText';\nimport AuthForgotPasswordLink from './AuthForgotPasswordLink';\nimport LoginButton from './LoginButton';\nimport LoginIconButtonGroup from './LoginIconButtonGroup';\nimport AuthCreateNewAccountLink from './AuthCreateNewAccountLink';\nimport AuthSkipLoginLink from './AuthSkipLoginLink';\nimport { RootState } from '../reducers';\nimport { AuthActionCreators as ActionCreators } from '../actions';\nimport '../assets/styles/Login.scss';\n\n/**\n * Own Props.\n */\ntype OwnProps = {\n  className?: string;\n};\n\n/**\n * TProps.\n */\ntype TProps = OwnProps & RootState & ActionCreators;\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<TProps> = (props) => {\n  return (\n    <div className='login'>\n      <AuthTitleLabel className='login-auth-title-label' />\n      {/* <EmailInputText\n        className='login-email-input-text'\n        value={props.auth.email}\n        onChange={props.updateEmail}\n      /> */}\n      <NameInputText\n        className='login-name-input-text'\n        value={props.auth.loginInfo.username}\n        onChange={props.updateLoginUsername}\n      />\n      <PasswordInputText\n        className='login-password-input-text'\n        value={props.auth.loginInfo.password}\n        onChange={props.updateLoginPassword}\n      />\n      {/* <AuthForgotPasswordLink className='login-auth-forgot-password-link' /> */}\n      <AuthSkipLoginLink\n        className='login-auth-skip-login-link'\n        onClick={props.resetLogin}\n      />\n      <LoginButton\n        className='login-login-button'\n        onClick={props.requestLogin}\n      />\n      <LoginIconButtonGroup className='login-login-icon-button-group' />\n      <AuthCreateNewAccountLink\n        className='login-auth-create-new-account-link'\n        onClick={props.resetLogin}\n      />\n    </div>\n  );\n};\n\nexport default Component;\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport {\n  updateLoginEmail,\n  updateLoginUsername,\n  updateLoginPassword,\n  requestLogin,\n  resetLogin,\n  AuthAction as Action,\n} from '../actions';\nimport { RootState } from '../reducers';\nimport Component from '../components/Login';\n\n/**\n * Map Dispatch to Props.\n */\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\n  return {\n    updateLoginEmail: (v: string) => dispatch(updateLoginEmail(v)),\n    updateLoginUsername: (v: string) => dispatch(updateLoginUsername(v)),\n    updateLoginPassword: (v: string) => dispatch(updateLoginPassword(v)),\n    requestLogin: () => dispatch(requestLogin()),\n    resetLogin: () => dispatch(resetLogin()),\n  };\n};\n\n/**\n * Map State to Props.\n */\nfunction mapStateToProps(rootState: RootState) {\n  return { ...rootState };\n}\n\n/**\n * Connect Presentational Component.\n */\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Lock from '@material-ui/icons/Lock';\n\n// import IconButton from '@material-ui/core/IconButton';\n// import Visibility from '@material-ui/icons/Visibility';\n// import VisibilityOff from '@material-ui/icons/VisibilityOff';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(0),\n    },\n    input: {\n      textAlign: 'left',\n      fontFamily: 'Josefin Sans',\n      fontSize: '16px',\n      fontStyle: 'normal',\n      color: '#fff',\n      width: '290px',\n    },\n  })\n);\n\n/**\n * IState.\n */\n// interface IState {\n//   showPassword: boolean;\n// }\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n  value: string;\n  onChange: any;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n\n  // const [values, setValues] = React.useState<IState>({\n  //   showPassword: false,\n  // });\n\n  // const handleClickShowPassword = () => {\n  //   setValues({ ...values, showPassword: !values.showPassword });\n  // };\n\n  // const handleMouseDownPassword = (\n  //   event: React.MouseEvent<HTMLButtonElement>\n  // ) => {\n  //   event.preventDefault();\n  // };\n\n  return (\n    <div className={className}>\n      <FormControl className={classes.formControl}>\n        <Input\n          type='password'\n          className={classes.input}\n          placeholder='Confirm Password'\n          startAdornment={\n            <InputAdornment position='start'>\n              <Lock />\n            </InputAdornment>\n          }\n          value={props.value}\n          onChange={(e) => {\n            props.onChange(e.target.value);\n          }}\n        />\n      </FormControl>\n      {/* <FormControl className={classes.formControl}>\n        <Input\n          type={values.showPassword ? 'text' : 'password'}\n          className={classes.input}\n          placeholder='Password'\n          startAdornment={\n            <InputAdornment position='start'>\n              <IconButton\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n              >\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl> */}\n    </div>\n  );\n};\n\nexport default Component;\n","import * as React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loginButton: {\n      textAlign: 'center',\n      fontFamily: 'Josefin Sans',\n      fontSize: '16px',\n      fontStyle: 'normal',\n      color: '#FFF',\n      width: '290px',\n    },\n  })\n);\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n  onClick: any;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n  return (\n    <div className={className}>\n      <Button\n        variant='contained'\n        color='primary'\n        className={classes.loginButton}\n        onClick={(e) => {\n          props.onClick();\n        }}\n      >\n        Register\n      </Button>\n    </div>\n  );\n};\n\nexport default Component;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Twitter from '@material-ui/icons/Twitter';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loginTwitterButton: {\n      textAlign: 'center',\n      borderWidth: '1px',\n      borderColor: '#FFF',\n    },\n  })\n);\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n\n  return (\n    <span className={className}>\n      <IconButton className={classes.loginTwitterButton}>\n        <Twitter color='primary' />\n      </IconButton>\n    </span>\n  );\n};\n\nexport default Component;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Facebook from '@material-ui/icons/Facebook';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loginFacebookButton: {\n      textAlign: 'center',\n    },\n  })\n);\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n\n  return (\n    <span className={className}>\n      <IconButton className={classes.loginFacebookButton}>\n        <Facebook color='primary' />\n      </IconButton>\n    </span>\n  );\n};\n\nexport default Component;\n","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport RegisterTwitterButton from './RegisterTwitterButton';\nimport RegisterFacebookButton from './RegisterFacebookButton';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  })\n);\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(className, classes.root)}>\n      <RegisterTwitterButton />\n      <RegisterFacebookButton />\n    </div>\n  );\n};\n\nexport default Component;\n","import * as React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    forgotPasswordLink: {\n      textAlign: 'center',\n      fontFamily: 'Josefin Sans',\n      fontSize: '16px',\n      fontStyle: 'normal',\n      color: '#fff',\n      // borderBottom: 'solid 1px #FFF',\n    },\n    link: {\n      color: '#FF7F50',\n    },\n  })\n);\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n  onClick: any;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n  return (\n    <span className={className}>\n      <h1 className={classes.forgotPasswordLink}>\n        <Link\n          to='login'\n          className={classes.link}\n          onClick={(e) => {\n            props.onClick();\n          }}\n        >\n          Already{' '}\n        </Link>\n        Have an Account?\n      </h1>\n    </span>\n  );\n};\n\nexport default Component;\n","import * as React from 'react';\nimport AuthTitleLabel from './AuthTitleLabel';\nimport NameInputText from './NameInputText';\nimport EmailInputText from './EmailInputText';\nimport PasswordInputText from './PasswordInputText';\nimport ConfirmPasswordInputText from './ConfirmPasswordInputText';\nimport RegisterButton from './RegisterButton';\nimport RegisterIconButtonGroup from './RegisterIconButtonGroup';\nimport AuthAlreadyHaveAnAccountLink from './AuthAlreadyHaveAnAccountLink';\nimport { RootState } from '../reducers';\nimport { AuthActionCreators as ActionCreators } from '../actions';\nimport '../assets/styles/Register.scss';\n\n/**\n * Own Props.\n */\ntype OwnProps = {\n  className?: string;\n};\n\n/**\n * TProps.\n */\ntype TProps = OwnProps & RootState & ActionCreators;\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<TProps> = (props) => {\n  return (\n    <div className='register'>\n      <AuthTitleLabel className='register-auth-title-label' />\n      <NameInputText\n        className='register-name-input-text'\n        value={props.auth.registerInfo.username}\n        onChange={props.updateRegisterUsername}\n      />\n      {/* <EmailInputText\n        className='register-email-input-text'\n        value={props.auth.registerInfo.email}\n        onChange={props.updateRegisterEmail}\n      /> */}\n      <PasswordInputText\n        className='register-password-input-text'\n        value={props.auth.registerInfo.password}\n        onChange={props.updateRegisterPassword}\n      />\n      <ConfirmPasswordInputText\n        className='register-confirm-password-input-text'\n        value={props.auth.registerInfo.passwordConfirm}\n        onChange={props.updateRegisterPasswordConfirm}\n      />\n      <RegisterButton\n        className='register-register-button'\n        onClick={props.requestRegister}\n      />\n      <RegisterIconButtonGroup className='register-register-icon-button-group' />\n      <AuthAlreadyHaveAnAccountLink\n        className='register-auth-already-have-an-account-link'\n        onClick={props.resetRegister}\n      />\n    </div>\n  );\n};\n\nexport default Component;\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport {\n  updateRegisterEmail,\n  updateRegisterUsername,\n  updateRegisterPassword,\n  updateRegisterPasswordConfirm,\n  requestRegister,\n  resetRegister,\n  AuthAction as Action,\n} from '../actions';\nimport { RootState } from '../reducers';\nimport Component from '../components/Register';\n\n/**\n * Map Dispatch to Props.\n */\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\n  return {\n    updateRegisterEmail: (v: string) => dispatch(updateRegisterEmail(v)),\n    updateRegisterUsername: (v: string) => dispatch(updateRegisterUsername(v)),\n    updateRegisterPassword: (v: string) => dispatch(updateRegisterPassword(v)),\n    updateRegisterPasswordConfirm: (v: string) =>\n      dispatch(updateRegisterPasswordConfirm(v)),\n    requestRegister: () => dispatch(requestRegister()),\n    resetRegister: () => dispatch(resetRegister()),\n  };\n};\n\n/**\n * Map State to Props.\n */\nfunction mapStateToProps(rootState: RootState) {\n  return { ...rootState };\n}\n\n/**\n * Connect Presentational Component.\n */\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n","import React from 'react';\nimport {\n  fade,\n  makeStyles,\n  Theme,\n  createStyles,\n} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Slide from '@material-ui/core/Slide';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      fontFamily: 'Josefin Sans',\n      fontSize: '16px',\n      fontStyle: 'normal',\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    grow: {\n      flexGrow: 1,\n      height: '10%',\n    },\n  })\n);\n\n/**\n * Own Props.\n */\ntype OwnProps = {\n  className?: string;\n  window?: () => Window;\n  children?: React.ReactElement;\n  onClick: any;\n  value: string;\n  onChange: any;\n};\n\n/**\n * TProps.\n */\ntype TProps = OwnProps;\n\nconst HideOnScroll: React.FC<TProps> = (props) => {\n  const { children, window } = props;\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction='down' in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<TProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(className, classes.grow)}>\n      <CssBaseline />\n      <HideOnScroll {...props}>\n        <AppBar position='static'>\n          <Toolbar>\n            <Paper component='form' className={classes.root}>\n              <InputBase\n                className={classes.input}\n                placeholder='Search Places...'\n                inputProps={{ 'aria-label': 'search places...' }}\n                value={props.value}\n                onChange={(e) => {\n                  props.onChange(e.target.value);\n                }}\n              />\n              <IconButton\n                className={classes.iconButton}\n                aria-label='search'\n                onClick={(e) => {\n                  props.onClick();\n                }}\n              >\n                <SearchIcon />\n              </IconButton>\n            </Paper>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n    </div>\n  );\n};\nexport default Component;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Bookmarks from '@material-ui/icons/Bookmarks';\nimport Settings from '@material-ui/icons/Settings';\nimport Search from '@material-ui/icons/Search';\n\nimport clsx from 'clsx';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    // height: '80px',\n  },\n});\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={clsx(className, classes.root)}\n    >\n      <BottomNavigationAction label='Search' icon={<Search />} />\n      <BottomNavigationAction label='Bookmarks' icon={<Bookmarks />} />\n      <BottomNavigationAction label='Favorites' icon={<FavoriteIcon />} />\n      <BottomNavigationAction label='Settings' icon={<Settings />} />\n    </BottomNavigation>\n  );\n};\n\nexport default Component;\n","import React from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport clsx from 'clsx';\n// import tileData from '../mocks/imgMocks';\n\n/**\n * Styles.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      width: '100%',\n      height: '80%',\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)',\n    },\n    gridListTileBar: {\n      textAlign: 'left',\n      fontFamily: 'Josefin Sans',\n      fontSize: '16px',\n      fontStyle: 'normal',\n    },\n  })\n);\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n  tileData: {\n    img: string;\n    title: string;\n    genre: string;\n    budget: number;\n    cols: number;\n  }[];\n}\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<IProps> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(className, classes.root)}>\n      <GridList cellHeight={180} className={classes.gridList} cols={2}>\n        {props.tileData.map((tile) => (\n          <GridListTile key={tile.img} className={classes.gridListTileBar}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              subtitle={\n                <span>\n                  <span>{tile.budget} </span> <span>{tile.genre}</span>\n                </span>\n              }\n              actionIcon={\n                <IconButton\n                  aria-label={`info about ${tile.title}`}\n                  className={classes.icon}\n                >\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n};\n\nexport default Component;\n","import * as React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport RestaurantList from './RestaurantList';\nimport { RootState } from '../reducers';\nimport { RestaurantActionCreators as ActionCreators } from '../actions';\nimport '../assets/styles/Search.scss';\n\n/**\n * Own Props.\n */\ntype OwnProps = {\n  className?: string;\n};\n\n/**\n * TProps.\n */\ntype TProps = OwnProps & RootState & ActionCreators;\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<TProps> = (props) => {\n  return (\n    <div className='search'>\n      <Header\n        className='search-header'\n        onClick={props.requestSearch}\n        value={props.restaurant.searchInfo.searchText}\n        onChange={props.updateSearchText}\n      />\n      <RestaurantList\n        className='search-restaurant-list'\n        tileData={props.restaurant.searchInfo.restaurants}\n      />\n      <Footer className='search-footer' />\n    </div>\n  );\n};\n\nexport default Component;\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport {\n  requestSearch,\n  updateSearchText,\n  RestaurantAction as Action,\n} from '../actions';\nimport { RootState } from '../reducers';\nimport Component from '../components/Search';\n\n/**\n * Map Dispatch to Props.\n */\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\n  return {\n    updateSearchText: (v: string) => dispatch(updateSearchText(v)),\n    requestSearch: () => dispatch(requestSearch()),\n  };\n};\n\n/**\n * Map State to Props.\n */\nfunction mapStateToProps(rootState: RootState) {\n  return { ...rootState };\n}\n\n/**\n * Connect Presentational Component.\n */\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n","import * as React from 'react';\nimport AuthTitleLabel from './AuthTitleLabel';\nimport { RootState } from '../reducers';\nimport '../assets/styles/Top.scss';\nimport { GeolocationActionCreators as ActionCreators } from '../actions';\n\n/**\n * Own Props.\n */\ntype OwnProps = {\n  className?: string;\n};\n\n/**\n * TProps.\n */\ntype TProps = OwnProps & RootState & ActionCreators;\n\n/**\n * Presentational Component.\n */\nconst Component: React.FC<TProps> = (props) => {\n  React.useEffect(() => {\n    props.requestGeolocation();\n  }, []);\n\n  return (\n    <div className='top'>\n      <AuthTitleLabel className='top-auth-title-label' />\n      {/* <img\n        src={`${process.env.PUBLIC_URL}/images/top-icon.svg`}\n        className='top-auth-top-icon'\n        alt='top icon'\n      /> */}\n    </div>\n  );\n};\n\nexport default Component;\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { requestGeolocation, GeolocationAction as Action } from '../actions';\nimport { RootState } from '../reducers';\nimport Component from '../components/Top';\n\n/**\n * Map Dispatch to Props.\n */\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\n  return {\n    requestGeolocation: () => dispatch(requestGeolocation()),\n  };\n};\n\n/**\n * Map State to Props.\n */\nfunction mapStateToProps(rootState: RootState) {\n  return { ...rootState };\n}\n\n/**\n * Connect Presentational Component.\n */\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router';\nimport Div100vh from 'react-div-100vh';\nimport './assets/styles/App.scss';\nimport Login from './containers/Login';\n// import Register from './components/Register';\nimport Register from './containers/Register';\n// import Search from './components/Search';\nimport Search from './containers/Search';\n// import Top from './components/Top';\nimport Top from './containers/Top';\n\n/**\n * IProps.\n */\ninterface IProps {\n  className?: string;\n}\n\n/**\n * Root Component.\n */\nconst Component: React.FC<IProps> = () => {\n  return (\n    <>\n      <Div100vh>\n        <Switch>\n          <Route exact path='/' component={Top} />\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/register' component={Register} />\n          <Route exact path='/search' component={Search} />\n        </Switch>\n      </Div100vh>\n    </>\n  );\n};\n\nexport default Component;\n","/* eslint-disable no-param-reassign */\nconst registerValidSW = (swUrl: string, config?: Config) => {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n};\n\nconst checkValidServiceWorker = (swUrl: string, config?: Config) => {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n};\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport const register = (config?: Config): void => {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL || '',\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n};\n\nexport const unregister = (): void => {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { configureStore } from './configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/styles/index.scss';\n\nconst history = createBrowserHistory();\nconst store = configureStore(history);\n\n/**\n * Entry Point.\n */\nconst Component: React.FC = () => {\n  return (\n    <React.StrictMode>\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <App />\n        </ConnectedRouter>\n      </Provider>\n    </React.StrictMode>\n  );\n};\n\nReactDOM.render(<Component />, document.querySelector('#root'));\n\n// If you want your app to work offline and load faster,\n// you can change unregister() to register() below.\nserviceWorker.register();\n","import { combineReducers } from 'redux';\nimport { connectRouter, RouterState } from 'connected-react-router';\nimport { History } from 'history';\nimport { authReducer, AuthState } from './auth';\nimport { geolocationReducer, GeolocationState } from './geolocation';\nimport { restaurantReducer, RestaurantState } from './restaurant';\n\n/**\n * Root State.\n */\nexport type RootState = {\n  router: RouterState;\n  auth: AuthState;\n  geolocation: GeolocationState;\n  restaurant: RestaurantState;\n};\n\n/**\n * Root Reducer.\n */\nexport const rootReducer = (history: History<unknown>) =>\n  combineReducers<RootState>({\n    router: connectRouter(history),\n    auth: authReducer,\n    geolocation: geolocationReducer,\n    restaurant: restaurantReducer,\n  });\n","import { AxiosResponse } from 'axios';\n\n/**\n * Success Callback.\n */\nconst successCallback = <S>(response: AxiosResponse<S>): { payload: S } => {\n  return { payload: response.data };\n};\n\n/**\n * Error Callback.\n */\nconst errorCallback = (error: any): { error: any } => {\n  return { error };\n};\n\nexport const HttpResponseHandler = {\n  successCallback,\n  errorCallback,\n};\n","import axios from 'axios';\nimport { HttpResponseHandler } from './HttpResponseHandler';\n\n/** @param {string} baseUrl */\n/** @param {string} resourcePath */\nconst getAll = <S>(baseUrl: string, resourcePath: string) => {\n  return axios\n    .get<S>(`${baseUrl}/${resourcePath}`)\n    .then(HttpResponseHandler.successCallback)\n    .catch(HttpResponseHandler.errorCallback);\n};\n\n/** @param {string} baseUrl */\n/** @param {string} resourcePath */\n/** @param {object} model */\nconst getAllByQuery = <T, S>(\n  baseUrl: string,\n  resourcePath: string,\n  model: T\n) => {\n  return axios\n    .get<S>(`${baseUrl}/${resourcePath}`, { params: model })\n    .then(HttpResponseHandler.successCallback)\n    .catch(HttpResponseHandler.errorCallback);\n};\n\n/** @param {string} baseUrl */\n/** @param {string} resourcePath */\n/** @param {string} id */\nconst getSingle = <S>(baseUrl: string, resourcePath: string, id: string) => {\n  return axios\n    .get<S>(`${baseUrl}/${resourcePath}/${id}`)\n    .then(HttpResponseHandler.successCallback)\n    .catch(HttpResponseHandler.errorCallback);\n};\n\n/** @param {string} baseUrl */\n/** @param {string} resourcePath */\n/** @param {object} model */\nconst post = <T, S>(baseUrl: string, resourcePath: string, model: T) => {\n  return axios\n    .post<S>(`${baseUrl}/${resourcePath}`, model)\n    .then(HttpResponseHandler.successCallback)\n    .catch(HttpResponseHandler.errorCallback);\n};\n\n/** @param {string} baseUrl */\n/** @param {string} resourcePath */\n/** @param {object} model */\nconst put = <T, S>(baseUrl: string, resourcePath: string, model: T) => {\n  return axios\n    .put<S>(`${baseUrl}/${resourcePath}`, model)\n    .then(HttpResponseHandler.successCallback)\n    .catch(HttpResponseHandler.errorCallback);\n};\n\n/** @param {string} baseUrl */\n/** @param {string} resourcePath */\n/** @param {object} model */\nconst patch = <T, S>(baseUrl: string, resourcePath: string, model: T) => {\n  return axios\n    .patch<S>(`${baseUrl}/${resourcePath}`, model)\n    .then(HttpResponseHandler.successCallback)\n    .catch(HttpResponseHandler.errorCallback);\n};\n\n/** @param {string} baseUrl */\n/** @param {string} resourcePath */\n/** @param {string} id */\nconst remove = <S>(baseUrl: string, resourcePath: string, id: string) => {\n  return axios\n    .delete<S>(`${baseUrl}/${resourcePath}/${id} `)\n    .then(HttpResponseHandler.successCallback)\n    .catch(HttpResponseHandler.errorCallback);\n};\n\n/**\n * Http Provider.\n */\nexport const HttpProvider = {\n  getAll,\n  getAllByQuery,\n  getSingle,\n  post,\n  put,\n  patch,\n  remove,\n};\n","export * from './HttpClient';\nexport * from './HttpClientOptions';\nexport * from './HttpProvider';\nexport * from './HttpResponseHandler';\n","export * from './auth';\nexport * from './users';\nexport * from './restaurants';\n","export * from './authHttpClient';\nexport * from './PostAuthApiRequestSchema';\nexport * from './PostAuthApiResponseSchema';\n","import { HttpClient, HttpClientOptions } from '../common';\n\nconst baseUrl = process.env.BFF_BASE_URL as string;\nconst resourcePath = 'auth/login';\n\nconst options: HttpClientOptions = {\n  baseUrl,\n  resourcePath,\n};\n\n/**\n * Auth Http Client.\n */\nexport const authHttpClient = new HttpClient(options);\n","import { HttpProvider } from './HttpProvider';\nimport { HttpClientOptions } from './HttpClientOptions';\n\n/**\n * Http Client.\n */\nexport class HttpClient {\n  public getAll: <S>() => Promise<{ error: any } | { payload: S }>;\n\n  public getAllByQuery: <T, S>(\n    model: T\n  ) => Promise<{ error: any } | { payload: S }>;\n\n  public getSingle: <S>(id: any) => Promise<{ error: any } | { payload: S }>;\n\n  public post: <T, S>(model: T) => Promise<{ error: any } | { payload: S }>;\n\n  public put: <T, S>(model: T) => Promise<{ error: any } | { payload: S }>;\n\n  public patch: <T, S>(model: T) => Promise<{ error: any } | { payload: S }>;\n\n  public remove: <S>(id: any) => Promise<{ error: any } | { payload: S }>;\n\n  constructor(options: HttpClientOptions) {\n    this.getAll = <S>() => {\n      return HttpProvider.getAll<S>(options.baseUrl, options.resourcePath);\n    };\n\n    this.getAllByQuery = <T, S>(model: T) => {\n      return HttpProvider.getAllByQuery<T, S>(\n        options.baseUrl,\n        options.resourcePath,\n        model\n      );\n    };\n\n    this.getSingle = <S>(id: string) => {\n      return HttpProvider.getSingle<S>(\n        options.baseUrl,\n        options.resourcePath,\n        id\n      );\n    };\n\n    this.post = <T, S>(model: T) => {\n      return HttpProvider.post<T, S>(\n        options.baseUrl,\n        options.resourcePath,\n        model\n      );\n    };\n\n    this.put = <T, S>(model: T) => {\n      return HttpProvider.put<T, S>(\n        options.baseUrl,\n        options.resourcePath,\n        model\n      );\n    };\n\n    this.patch = <T, S>(model: T) => {\n      return HttpProvider.patch<T, S>(\n        options.baseUrl,\n        options.resourcePath,\n        model\n      );\n    };\n\n    this.remove = <S>(id: string) => {\n      return HttpProvider.remove<S>(options.baseUrl, options.resourcePath, id);\n    };\n  }\n}\n","export * from './usersHttpClient';\nexport * from './PostUsersApiRequestSchema';\nexport * from './PostUsersApiResponseSchema';\n","import { HttpClient, HttpClientOptions } from '../common';\n\nconst baseUrl = process.env.BFF_BASE_URL as string;\nconst resourcePath = 'users';\n\nconst options: HttpClientOptions = {\n  baseUrl,\n  resourcePath,\n};\n\n/**\n * Users Http Client.\n */\nexport const usersHttpClient = new HttpClient(options);\n","export * from './restaurantsHttpClient';\nexport * from './GetRestaurantsApiRequestSchema';\nexport * from './GetRestaurantsApiResponseSchema';\n","import { HttpClient, HttpClientOptions } from '../common';\n\nconst baseUrl = process.env.BFF_BASE_URL as string;\nconst resourcePath = 'restaurants';\n\nconst options: HttpClientOptions = {\n  baseUrl,\n  resourcePath,\n};\n\n/**\n * Restaurants Http Client.\n */\nexport const restaurantsHttpClient = new HttpClient(options);\n"],"sourceRoot":""}